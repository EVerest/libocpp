{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Schema for SampledDataCtrlr",
  "type": "object",
  "properties": {
    "Available": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "boolean"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadOnly"
        }
      ],
      "description": "If this variable reports a value of true, Sampled Data is supported",
      "type": "boolean"
    },
    "Enabled": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "boolean"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "If this variable reports a value of true, Sampled Data is enabled.",
      "type": "boolean"
    },
    "SampledDataSignReadings": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "boolean"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "If set to true, the Charging Station SHALL include signed meter values in the TransactionEventRequest to the CSMS",
      "type": "boolean"
    },
    "SampledDataTxEndedInterval": {
      "characteristics": {
        "unit": "s",
        "supportsMonitoring": true,
        "dataType": "integer"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "Interval between sampling of metering (or other) data, intended to be transmitted in the TransactionEventRequest (eventType = Ended) message.",
      "type": "integer"
    },
    "SampledDataTxEndedMeasurands": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "MemberList"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "Sampled measurands to be included in the meterValues element of TransactionEventRequest (eventType = Ended), every SampledDataTxEndedInterval seconds from the start of the transaction.",
      "type": "string"
    },
    "SampledDataTxStartedMeasurands": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "MemberList"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "Sampled measurand(s) to be taken at the start of any transaction to be included in the meterValues field of the first TransactionEventRequest message send at the start of a transaction (eventType = Started)",
      "type": "string"
    },
    "SampledDataTxUpdatedInterval": {
      "characteristics": {
        "unit": "s",
        "supportsMonitoring": true,
        "dataType": "integer"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "Interval between sampling of metering (or other) data, intended to be transmitted via TransactionEventRequest (eventType = Updated) messages",
      "type": "integer"
    },
    "SampledDataTxUpdatedMeasurands": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "MemberList"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "Sampled measurands to be included in the meterValues element of TransactionEventRequest (eventType = Ended)",
      "type": "string"
    },
    "RegisterValuesWithoutPhases": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "boolean"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "If this variable reports a value of true, then meter values of measurand Energy.Active.Import.Register will only report the total energy over all phases without reporting the individual phase values. If this variable is absent or false, then the value for each phase is reported, possibly also with a total value (depending on the meter).",
      "type": "boolean"
    }
  },
  "required": [
    "SampledDataTxEndedInterval",
    "SampledDataTxEndedMeasurands",
    "SampledDataTxStartedMeasurands",
    "SampledDataTxUpdatedInterval",
    "SampledDataTxUpdatedMeasurands"
  ]
}