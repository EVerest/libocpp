{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "description": "Schema for OCPPCommCtrlr",
  "type": "object",
  "properties": {
    "Enabled": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "boolean"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "type": "boolean"
    },
    "ActiveNetworkProfile": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "string"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadOnly"
        }
      ],
      "description": "Indicates the configuration profile the station uses at that moment to connect to the network.",
      "type": "string"
    },
    "FileTransferProtocols": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "MemberList"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadOnly"
        }
      ],
      "description": "List of supported file transfer protocols",
      "type": "string"
    },
    "HeartbeatInterval": {
      "characteristics": {
        "unit": "s",
        "supportsMonitoring": true,
        "dataType": "integer"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "Interval of inactivity (no OCPP exchanges) with CSMS after which the Charging Station should send HeartbeatRequest.",
      "type": "integer"
    },
    "MessageTimeoutDefault": {
      "characteristics": {
        "unit": "s",
        "supportsMonitoring": true,
        "dataType": "integer"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadOnly"
        }
      ],
      "description": "MessageTimeout(Default) specifies after which time a message times out. It is configured in the network connection profile.",
      "type": "integer"
    },
    "MessageAttemptIntervalTransactionEvent": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "integer"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "MessageAttemptInterval(TransactionEvent) specifies long the Charging Station should wait before resubmitting a TransactionEventRequest message that the CSMS failed to process.",
      "type": "integer"
    },
    "MessageAttemptsTransactionEvent": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "integer"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "MessageAttempts(TransactionEvent) specifies how often the Charging Station should try to submit a TransactionEventRequest message when the CSMS fails to process it.",
      "type": "integer"
    },
    "NetworkConfigurationPriority": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "string"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "A comma separated ordered list of the priority of the possible Network Connection Profiles.",
      "type": "string"
    },
    "NetworkProfileConnectionAttempts": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "integer"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "Specifies the number of connection attempts the Charging Station executes before switching to a different profile.",
      "type": "integer"
    },
    "OfflineThreshold": {
      "characteristics": {
        "unit": "s",
        "supportsMonitoring": true,
        "dataType": "integer"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "When the offline period of a Charging Station exceeds the OfflineThreshold it is recommended to send a StatusNotificationRequest for all its Connectors.",
      "type": "integer"
    },
    "PublicKeyWithSignedMeterValue": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "OptionList"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "This Configuration Variable can be used to configure whether a public key needs to be sent with a signed meter value. Note, that the field is required, so it needs to be present as an empty string when the public key is not sent.",
      "type": "string"
    },
    "QueueAllMessages": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "boolean"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "When this variable is set to true, the Charging Station will queue all message until they are delivered to the CSMS.",
      "type": "boolean"
    },
    "ResetRetries": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "integer"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "Number of times to retry a reset of the Charging Station when a reset was unsuccessful",
      "type": "integer"
    },
    "RetryBackOffRandomRange": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "integer"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "When the Charging Station is reconnecting, after a connection loss, it will use this variable as the maximum value for the random part of the back-off time",
      "type": "integer"
    },
    "RetryBackOffRepeatTimes": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "integer"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "When the Charging Station is reconnecting, after a connection loss, it will use this variable for the amount of times it will double the previous back-off time.",
      "type": "integer"
    },
    "RetryBackOffWaitMinimum": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "integer"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "When the Charging Station is reconnecting, after a connection loss, it will use this variable as the minimum back-off time, the first time it tries to reconnect.",
      "type": "integer"
    },
    "UnlockOnEVSideDisconnect": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "boolean"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "When set to true, the Charging Station SHALL unlock the cable on the Charging Station side when the cable is unplugged at the EV. For an EVSE with only fixed cables, the mutability SHALL be ReadOnly and the actual value SHALL be false. For a charging station with fixed cables and sockets, the variable is only applicable to the sockets.",
      "type": "boolean"
    },
    "WebSocketPingInterval": {
      "characteristics": {
        "unit": "s",
        "supportsMonitoring": true,
        "dataType": "integer"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadWrite"
        }
      ],
      "description": "0 disables client side websocket Ping/Pong. In this case there is either no ping/pong or the server initiates the ping and client responds with Pong. Positive values are interpreted as number of seconds between pings. Negative values are not allowed.",
      "type": "integer"
    },
    "FieldLength": {
      "characteristics": {
        "supportsMonitoring": true,
        "dataType": "integer"
      },
      "attributes": [
        {
          "type": "Actual",
          "mutability": "ReadOnly"
        }
      ],
      "description": "This variable is used to report the length of <field> in <message> when it is larger than the length that is defined in the standard OCPP message schema.",
      "type": "integer"
    }
  },
  "required": [
    "FileTransferProtocols",
    "MessageAttemptIntervalTransactionEvent",
    "MessageAttemptsTransactionEvent",
    "MessageTimeoutDefault",
    "NetworkConfigurationPriority",
    "NetworkProfileConnectionAttempts",
    "OfflineThreshold",
    "ResetRetries",
    "UnlockOnEVSideDisconnect"
  ]
}